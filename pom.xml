<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.moqi</groupId>
    <artifactId>spock-project</artifactId>
    <version>20200111</version>
    <packaging>jar</packaging>

    <!-- 统一管理所有依赖的版本 -->
    <properties>
        <!-- 指定编码格式 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <apache.common.lang3.version>3.11</apache.common.lang3.version>
        <fastjson.version>1.2.74</fastjson.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <spock-core.version>1.3-groovy-2.5</spock-core.version>
        <groovy-all.version>3.0.7</groovy-all.version>
        <cglib-nodep.version>3.3.0</cglib-nodep.version>
        <objenesis.version>3.1</objenesis.version>
        <byte-buddy.version>1.10.18</byte-buddy.version>
        <surefire-junit47.version>3.0.0-M3</surefire-junit47.version>

        <maven.compiler.plugin.java.version>1.8</maven.compiler.plugin.java.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-assembly-plugin.version>3.0.0</maven-assembly-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
        <gmavenplus-plugin.version>1.7.1</gmavenplus-plugin.version>

        <groovy.scope>compile</groovy.scope>
        <spock.scope>test</spock.scope>
    </properties>

    <dependencies>

        <!-- apache commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.common.lang3.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!-- junit 测试包 -->
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mandatory dependencies for using Spock 使用Spock的强制依赖 -->
        <!-- https://mvnrepository.com/artifact/org.spockframework/spock-core -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock-core.version}</version>
            <scope>${spock.scope}</scope>
        </dependency>


        <!-- Optional dependencies for using Spock 使用Spock的可选依赖项 -->
        <!-- use a specific Groovy version rather than the one specified by spock-core 使用特定的Groovy版本而不是spock-core指定的版本 -->
        <!-- https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy-all.version}</version>
            <type>pom</type>
            <scope>${groovy.scope}</scope>
        </dependency>

        <!-- enables mocking of classes (in addition to interfaces) 允许模拟类（除了接口） -->
        <!-- https://mvnrepository.com/artifact/cglib/cglib-nodep -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>${cglib-nodep.version}</version>
            <scope>${spock.scope}</scope>
        </dependency>

        <!-- enables mocking of classes without default constructor (together with CGLIB) 允许模拟没有默认构造函数的类（与CGLIB一起） -->
        <!-- https://mvnrepository.com/artifact/org.objenesis/objenesis -->
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>${objenesis.version}</version>
            <scope>${spock.scope}</scope>
        </dependency>

        <!-- enables mocking of classes (in addition to interfaces) 允许模拟类（除了接口）-->
        <!-- https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${byte-buddy.version}</version>
            <scope>${spock.scope}</scope>
        </dependency>

    </dependencies>

    <!-- build 用来标识 Maven 项目在构建中的属性 -->
    <!-- plugins 和 pluginManagement 的关系类似于 dependencies 和 dependencyManagement 的关系 -->
    <build>

        <plugins>

            <!-- 声明编译器插件，在配置中指定 JDK 版本，在下一行网址中获取最新编译器插件的 version -->
            <!-- https://maven.apache.org/plugins/maven-compiler-plugin/usage.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.plugin.java.version}</source>
                    <target>${maven.compiler.plugin.java.version}</target>
                </configuration>
            </plugin>

            <!-- 声明 maven-assembly-plugin 的版本和 executions 信息，配置信息在子项目引用中补充 -->
            <!-- 版本参考下面地址中 maven-assembly-plugin 的版本 -->
            <!-- http://maven.apache.org/plugins/maven-assembly-plugin/plugin-management.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Mandatory plugins for using Spock -->
            <plugin>
                <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                visit https://github.com/groovy/GMavenPlus/wiki -->
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- maven 执行单元测试需要的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <useFile>false</useFile>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Spec.java</include>
                    </includes>
                </configuration>
                <dependencies>
                    <!-- https://mvnrepository.com/artifact/org.apache.maven.surefire/surefire-junit47 -->
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${surefire-junit47.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- 执行 CodeCov 代码覆盖率检查 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <check/>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <!-- For Github Package -->
    <distributionManagement>
        <repository>
            <id>spock-project</id>
            <name>GitHub Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/moqimoqidea/spock-project</url>
        </repository>
    </distributionManagement>


</project>
